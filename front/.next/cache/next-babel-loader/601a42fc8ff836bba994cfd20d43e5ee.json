{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { useSelector } from 'react-redux';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_SPOST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\n\nfunction Post() {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_SPOST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/post/[id].js"],"names":["useRouter","React","axios","END","useSelector","wrapper","LOAD_MY_INFO_REQUEST","LOAD_SPOST_REQUEST","AppLayout","PostCard","Post","router","id","query","singlePost","state","post","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AAED,OAAO,MAAMG,kBAAkB,GAAGZ,OAAO,CAACY,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAjB,EAAAA,KAAK,CAACoB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACAjB,EAAAA,KAAK,CAACoB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AAAE;AAC3BjB,IAAAA,KAAK,CAACoB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEpB;AADe,GAAvB;AAGAY,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEnB,kBADe;AAErBoB,IAAAA,IAAI,EAAET,OAAO,CAACU,MAAR,CAAehB;AAFA,GAAvB;AAIAM,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBtB,GAAvB;AACA,QAAMe,OAAO,CAACM,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAjBiC,CAA3B;AAmBP,eAAepB,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector } from 'react-redux';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_SPOST_REQUEST } from '../../reducers/post';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\nfunction Post() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { singlePost } = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <PostCard post={singlePost} />\r\n\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_SPOST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}