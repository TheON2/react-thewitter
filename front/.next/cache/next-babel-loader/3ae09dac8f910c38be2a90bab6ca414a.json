{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { watchCompilers } from \"next/dist/build/output\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(watchCompilers())]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/sagas/index.js"],"names":["rootSaga","watchCompilers","all","fork"],"mappings":";;oDAEyBA,Q;;AAFzB,SAAQC,cAAR,QAA6B,wBAA7B;AAEA,eAAe,SAAUD,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAME,GAAG,CAAC,CACNC,IAAI,CAACF,cAAc,EAAf,CADE,CAAD,CAAT;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {watchCompilers} from \"next/dist/build/output\";\r\n\r\nexport default function* rootSaga(){\r\n yield all([\r\n     fork(watchCompilers())\r\n ])\r\n}"]},"metadata":{},"sourceType":"module"}