{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {},\n  post: {}\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT'\n  };\n}; //(이전상태,액션) => 다음상태\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","loginAction","data","type","logoutAction","rootReducer","state","action","console","log","payload","isLoggedIn"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,IAAI,EAAC,EADU;AAIfC,EAAAA,IAAI,EAAC;AAJU,CAAnB;AASA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAQ;AAC/B,SAAM;AACFC,IAAAA,IAAI,EAAC,QADH;AAEFD,IAAAA;AAFE,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAI;AAC5B,SAAM;AACFD,IAAAA,IAAI,EAAC;AADH,GAAN;AAGH,CAJM,C,CAMP;;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAsBS,MAAtB,KAA+B;AAC/C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKN,OAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAtB;AACA,6CACOD,KADP,GACgBC,MAAM,CAACG,OADvB;;AAGJ,SAAK,QAAL;AACI,6CACOJ,KADP;AAEIP,QAAAA,IAAI,kCACGO,KAAK,CAACP,IADT;AAEAY,UAAAA,UAAU,EAAE,IAFZ;AAGAZ,UAAAA,IAAI,EAACQ,MAAM,CAACL;AAHZ;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOI,KADP;AAEIP,QAAAA,IAAI,kCACDO,KAAK,CAACP,IADL;AAEJY,UAAAA,UAAU,EAAC,KAFP;AAGJZ,UAAAA,IAAI,EAAC;AAHD;AAFR;;AAOJ;AACI,aAAOO,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import {HYDRATE} from \"next-redux-wrapper\";\r\n\r\nconst initialState={\r\n    user:{\r\n\r\n    },\r\n    post:{\r\n        \r\n    }\r\n}\r\n\r\nexport const loginAction = (data)=>{\r\n    return{\r\n        type:'LOG_IN',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutAction = ()=>{\r\n    return{\r\n        type:'LOG_OUT',\r\n    }\r\n}\r\n\r\n//(이전상태,액션) => 다음상태\r\nconst rootReducer = (state = initialState,action)=>{\r\n    switch (action.type){\r\n        case HYDRATE:\r\n            console.log('HYDRATE',action);\r\n            return {\r\n                ...state,...action.payload\r\n            };\r\n        case 'LOG_IN':\r\n            return{\r\n                ...state,\r\n                user:{\r\n                    ...state.user,\r\n                    isLoggedIn: true,\r\n                    user:action.data\r\n                }\r\n            }\r\n        case 'LOG_OUT':\r\n            return{\r\n                ...state,\r\n                user:{\r\n                ...state.user,\r\n                isLoggedIn:false,\r\n                user:null}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}