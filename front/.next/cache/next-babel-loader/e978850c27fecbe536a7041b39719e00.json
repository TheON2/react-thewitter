{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nfunction Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, id, \"\\uBC88 \\uAC8C\\uC2DC\\uAE00\");\n}\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/post/[id].js"],"names":["useRouter","React","Post","router","id","query"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAOA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAQI,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,EAAN,8BADF;AAGD;;GAPQF,I;UACQF,S;;;KADRE,I;;AA2BT,eAAeA,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport wrapper from \"../../store/configureStore\";\r\nimport axios from \"axios\";\r\nimport {LOAD_MY_INFO_REQUEST} from \"../../reducers/user\";\r\nimport {LOAD_POST_REQUEST} from \"../../reducers/post\";\r\nimport {END} from \"redux-saga\";\r\n\r\nfunction Post() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  return (\r\n    <div>{id}번 게시글</div>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}