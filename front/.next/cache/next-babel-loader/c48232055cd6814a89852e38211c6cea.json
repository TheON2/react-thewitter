{"ast":null,"code":"import shordId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shordId.generate(),\n      User: {\n        id: shordId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shordId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.paragraph()\n      }]\n    };\n  });\n};\nexport var UPLOAD_POST_REQUEST = 'UPLOAD_POST_REQUEST';\nexport var UPLOAD_POST_SUCCESS = 'UPLOAD_POST_SUCCESS';\nexport var UPLOAD_POST_FAILURE = 'UPLOAD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'TheON2'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shordId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'TheON2'\n    }\n  };\n}; // (이전상태,액션) => 다음상태\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostError = action.error;\n        draft.likePostLoading = false;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostError = action.error;\n        draft.unlikePostLoading = false;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        // draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostError = action.error;\n        draft.loadPostLoading = false;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        // draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostError = action.error;\n        draft.addPostLoading = false;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostError = action.error;\n        draft.removePostLoading = false;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/reducers/post.js"],"names":["shordId","produce","faker","initialState","mainPosts","imagePaths","hasMorePost","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","UPLOAD_POST_REQUEST","UPLOAD_POST_SUCCESS","UPLOAD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","post","find","v","PostId","Likers","push","UserId","error","filter","concat","length","unshift"],"mappings":"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","sourcesContent":["import shordId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n  id: shordId.generate(),\r\n  User: {\r\n    id: shordId.generate(),\r\n    nickname: faker.name.findName(),\r\n  },\r\n  content: faker.lorem.paragraph(),\r\n  Images: [{\r\n    src: faker.image.image(),\r\n  }],\r\n  Comments: [{\r\n    User: {\r\n      id: shordId.generate(),\r\n      nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n  }],\r\n\r\n}));\r\n\r\nexport const UPLOAD_POST_REQUEST = 'UPLOAD_POST_REQUEST';\r\nexport const UPLOAD_POST_SUCCESS = 'UPLOAD_POST_SUCCESS';\r\nexport const UPLOAD_POST_FAILURE = 'UPLOAD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'TheON2',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shordId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'TheON2',\r\n  },\r\n});\r\n\r\n// (이전상태,액션) => 다음상태\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({ id: action.data.UserId });\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostError = action.error;\r\n      draft.likePostLoading = false;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostError = action.error;\r\n      draft.unlikePostLoading = false;\r\n      break;\r\n    case LOAD_POST_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_POST_SUCCESS:\r\n      // draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\r\n      draft.mainPosts = action.data.concat(draft.mainPosts);\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.hasMorePost = draft.mainPosts.length < 50;\r\n      break;\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostError = action.error;\r\n      draft.loadPostLoading = false;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      // draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostError = action.error;\r\n      draft.addPostLoading = false;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostError = action.error;\r\n      draft.removePostLoading = false;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}