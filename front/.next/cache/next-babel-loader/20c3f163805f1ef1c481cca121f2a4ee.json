{"ast":null,"code":"import axios from 'axios';\nimport { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut(action) {\n  try {\n    yield call(logOutAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction SignUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(SignUpAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction FollowAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(logOutAPI,action.data)\n    yield delay(1000);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction UnFollowAPI(data) {\n  return axios.post('/api/unfollow', data);\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(logOutAPI,action.data)\n    yield delay(1000);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction ChangeNickNameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickName(action) {\n  try {\n    const result = yield call(ChangeNickNameAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangenickName() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow), fork(watchLoadMyInfo), fork(watchChangenickName)]);\n}","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/sagas/user.js"],"names":["axios","all","delay","fork","put","takeLatest","call","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loadMyInfoAPI","get","loadMyInfo","result","type","data","err","error","response","logInAPI","post","logIn","action","logOutAPI","logOut","SignUpAPI","signUp","FollowAPI","follow","UnFollowAPI","unfollow","ChangeNickNameAPI","patch","nickname","changeNickName","watchLogin","watchLogOut","watchSignUp","watchFollow","watchUnFollow","watchLoadMyInfo","watchChangenickName","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\r\nimport {\r\n  CHANGE_NICKNAME_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n  return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    yield call(logOutAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction SignUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(SignUpAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction FollowAPI(data) {\r\n  return axios.post('/api/follow', data);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(logOutAPI,action.data)\r\n    yield delay(1000);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction UnFollowAPI(data) {\r\n  return axios.post('/api/unfollow', data);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(logOutAPI,action.data)\r\n    yield delay(1000);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction ChangeNickNameAPI(data) {\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickName(action) {\r\n  try {\r\n    const result = yield call(ChangeNickNameAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchChangenickName() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchChangenickName),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}