{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middelwares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middelwares)) //배포용일때\n  : composeWithDevTools(applyMiddleware(...middelwares)); //개발용일때\n\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middelwares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA2B,oBAA3B;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAA0BC,IAAD,IAAWC,MAAD,IAAW;AACnEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAHD;;AAKA,MAAMG,cAAc,GAAC,MAAI;AACrB,QAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AACA,QAAMY,WAAW,GAAE,CAACD,cAAD,EAAgBR,gBAAhB,CAAnB;AACA,QAAMU,QAAQ,GAAG,QACff,OAAO,CAACD,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADQ,CACyB;AADzB,IAEfb,mBAAmB,CAACF,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAFrB,CAHqB,CAKiC;;AACtD,QAAME,KAAK,GAAGlB,WAAW,CAACK,OAAD,EAASY,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH,CATD;;AAUA,MAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAgB;AAACQ,EAAAA,KAAK;AAAN,CAAhB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from'next-redux-wrapper';\r\nimport {createStore,applyMiddleware,compose} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware = ({dispatch,getState}) => (next) => (action) =>{\r\n    console.log(action);\r\n    return next(action);\r\n}\r\n\r\nconst configureStore=()=>{\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middelwares =[sagaMiddleware,loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middelwares))//배포용일때\r\n    : composeWithDevTools(applyMiddleware(...middelwares))//개발용일때\r\n    const store = createStore(reducer,enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\nconst wrapper = createWrapper(configureStore,{debug:process.env.NODE_ENV==='development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}