{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var initialState = {\n  logInLoading: false,\n  // 로그인시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpFailure: null,\n  changeNicknameLoading: false,\n  // 닉네임변경시도중\n  changeNicknameDone: false,\n  changeNicknameFailure: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: 'TheON2',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: 'theone'\n    }, {\n      nickname: 'theone'\n    }, {\n      nickname: 'theone'\n    }],\n    Followers: [{\n      nickname: 'theone'\n    }, {\n      nickname: 'theone'\n    }, {\n      nickname: 'theone'\n    }]\n  });\n}; // (이전상태,액션) => 다음상태\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: false\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true,\n        me: null\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true,\n        me: null\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: {\n          Posts: [{\n            id: action.data\n          }].concat(_toConsumableArray(state.me.Posts))\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpFailure","changeNicknameLoading","changeNicknameDone","changeNicknameFailure","me","signUpData","loginData","loginRequestAction","data","type","logoutRequestAction","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","nickname","id","Posts","Followings","Followers","reducer","state","action","error","signUpError","changeNicknameError"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  logInLoading: false, // 로그인시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, // 회원가입 시도중\r\n  signUpDone: false,\r\n  signUpFailure: null,\r\n  changeNicknameLoading: false, // 닉네임변경시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameFailure: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\nexport const loginRequestAction = (data) => ({\r\n  type: 'LOG_IN_REQUEST',\r\n  data,\r\n});\r\n\r\nexport const logoutRequestAction = () => ({\r\n  type: 'LOG_OUT_REQUEST',\r\n});\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: 'TheON2',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [{ nickname: 'theone' }, { nickname: 'theone' }, { nickname: 'theone' }],\r\n  Followers: [{ nickname: 'theone' }, { nickname: 'theone' }, { nickname: 'theone' }],\r\n});\r\n\r\n// (이전상태,액션) => 다음상태\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      return {\r\n        ...state,\r\n        logInLoading: true,\r\n        logInError: null,\r\n        logInDone: false,\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInDone: true,\r\n        me: dummyUser(action.data),\r\n      };\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        logInLoading: false,\r\n        logInError: false,\r\n      };\r\n\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        logOutLoading: true,\r\n        logOutError: null,\r\n      };\r\n    case LOG_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutDone: true,\r\n        me: null,\r\n      };\r\n    case LOG_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutError: action.error,\r\n      };\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        signUpLoading: true,\r\n        signUpError: null,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpDone: true,\r\n        me: null,\r\n      };\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpError: action.error,\r\n      };\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: true,\r\n        changeNicknameError: null,\r\n      };\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameDone: true,\r\n        me: null,\r\n      };\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameError: action.error,\r\n      };\r\n    case ADD_POST_TO_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          Posts: [{ id: action.data }, ...state.me.Posts],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}