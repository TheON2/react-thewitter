{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollow),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport axios from 'axios';\nimport { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction loadMyInfoAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadMyInfoAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LOAD_MY_INFO_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction logOut(action) {\n  return _regeneratorRuntime.wrap(function logOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(logOutAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction SignUpAPI(data) {\n  return axios.post('/user', data);\n}\n\n_c = SignUpAPI;\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(SignUpAPI, action.data);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction FollowAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\n_c2 = FollowAPI;\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: FOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context5.next = 11;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 11;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction UnFollowAPI(data) {\n  return axios.post('/api/unfollow', data);\n}\n\n_c3 = UnFollowAPI;\n\nfunction unfollow(action) {\n  return _regeneratorRuntime.wrap(function unfollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: UNFOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context6.next = 11;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 11;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow), fork(watchLoadMyInfo)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignUpAPI\");\n$RefreshReg$(_c2, \"FollowAPI\");\n$RefreshReg$(_c3, \"UnFollowAPI\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/sagas/user.js"],"names":["loadMyInfo","logIn","logOut","signUp","follow","unfollow","watchLogin","watchLogOut","watchSignUp","watchFollow","watchUnFollow","watchLoadMyInfo","userSaga","axios","all","delay","fork","put","takeLatest","call","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loadMyInfoAPI","data","post","action","result","type","error","response","logInAPI","logOutAPI","SignUpAPI","FollowAPI","UnFollowAPI"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\r\nimport {\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction loadMyInfoAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n  return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    yield call(logOutAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction SignUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(SignUpAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction FollowAPI(data) {\r\n  return axios.post('/api/follow', data);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(logOutAPI,action.data)\r\n    yield delay(1000);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction UnFollowAPI(data) {\r\n  return axios.post('/api/unfollow', data);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(logOutAPI,action.data)\r\n    yield delay(1000);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n    fork(watchLoadMyInfo),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}