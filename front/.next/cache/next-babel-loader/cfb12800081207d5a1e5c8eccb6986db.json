{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    reTweetError,\n    id\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (reTweetError) {\n      alert(reTweetError);\n    }\n  }, [reTweetError]);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }\n  }), mainPosts.slice(0).reverse().map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 51\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePost && !loadPostLoading ? ref : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","useInView","AppLayout","PostForm","PostCard","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostLoading","reTweetError","id","post","alert","type","ref","inView","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","addEventListener","removeEventListener","slice","reverse","map","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAST,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,eAA1B;AAA2CC,IAAAA,YAA3C;AAAyDC,IAAAA;AAAzD,MAAgEhB,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACO,IAAlB,CAAjF;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,YAAJ,EAAkB;AAChBG,MAAAA,KAAK,CAACH,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBpB,SAAS,EAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,aAASwB,QAAT,GAAoB;AAClB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GAA6DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAzG,EAA8G;AAC5G,YAAIf,WAAW,IAAI,CAACC,eAApB,EAAqC;AAAA;;AACnC,gBAAMe,MAAM,iBAAGjB,SAAS,CAACA,SAAS,CAACkB,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCd,EAAhD;AACAR,UAAAA,QAAQ,CAAC;AACPW,YAAAA,IAAI,EAAEd,iBADC;AAEPwB,YAAAA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AACDN,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACT,WAAD,EAAcC,eAAd,EAA+BF,SAA/B,CAhBM,CAAT;AAkBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGG,SAAS,CAACqB,KAAV,CAAgB,CAAhB,EAAmBC,OAAnB,GAA6BC,GAA7B,CAAkClB,IAAD,IAAU,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACD,EAApB;AAAwB,IAAA,IAAI,EAAEC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C,CAFH,EAGE;AAAK,IAAA,GAAG,EAAEJ,WAAW,IAAI,CAACC,eAAhB,GAAkCM,GAAlC,GAAwCgB,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAe7B,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePost, loadPostLoading, reTweetError, id } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (reTweetError) {\r\n      alert(reTweetError);\r\n    }\r\n  }, [reTweetError]);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  const [ref, inView] = useInView();\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, loadPostLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.slice(0).reverse().map((post) => <PostCard key={post.id} post={post} />)}\r\n      <div ref={hasMorePost && !loadPostLoading ? ref : undefined} />\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}