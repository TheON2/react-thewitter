{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport useSWR from 'swr';\nimport AppLayout from '../components/AppLayout';\nimport NickNameEditForm from '../components/NickNameEditForm';\nimport FollowList from '../components/FollowList';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\n\nfunction Profile() {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    data: followersData,\n    error: followerError\n  } = useSWR('http://localhost:3000/user/followers', fetcher);\n  const {\n    data: followingsData,\n    error: followingError\n  } = useSWR('http://localhost:3000/user/followings', fetcher);\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\n  } // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_FOLLOWERS_REQUEST,\n  //   });\n  //   dispatch({\n  //     type: LOAD_FOLLOWINGS_REQUEST,\n  //   });\n  // }, []);\n\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\")), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(NickNameEditForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789\",\n    data: followingsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC\",\n    data: followersData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/profile.js"],"names":["React","useEffect","Head","useDispatch","useSelector","Router","axios","END","useSWR","AppLayout","NickNameEditForm","FollowList","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","LOAD_POST_REQUEST","fetcher","url","get","withCredentials","then","result","data","Profile","dispatch","me","state","user","followersData","error","followerError","followingsData","followingError","id","push","console","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport  Router  from 'next/router';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport useSWR from 'swr';\r\nimport AppLayout from '../components/AppLayout';\r\nimport NickNameEditForm from '../components/NickNameEditForm';\r\nimport FollowList from '../components/FollowList';\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\r\n\r\nfunction Profile() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  const { data: followersData, error: followerError } = useSWR('http://localhost:3000/user/followers', fetcher);\r\n  const { data: followingsData, error: followingError } = useSWR('http://localhost:3000/user/followings', fetcher);\r\n\r\n  useEffect(() => {\r\n    if (!(me && me.id)) {\r\n      Router.push('/');\r\n    }\r\n  }, [me && me.id]);\r\n  if (!me) {\r\n    return '내 정보 로딩중...';\r\n  }\r\n\r\n  if (followerError || followingError) {\r\n    console.error(followerError || followingError);\r\n    return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: LOAD_FOLLOWERS_REQUEST,\r\n  //   });\r\n  //   dispatch({\r\n  //     type: LOAD_FOLLOWINGS_REQUEST,\r\n  //   });\r\n  // }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>내 프로필 | NodeBird</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NickNameEditForm />\r\n        <FollowList header=\"팔로잉\" data={followingsData} />\r\n        <FollowList header=\"팔로워\" data={followersData} />\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}