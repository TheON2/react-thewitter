{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from '../reducers';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var middelwares = [loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middelwares)) //배포용일때\n  : composeWithDevTools(applyMiddleware.apply(void 0, middelwares)); //개발용일때\n\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middelwares","enhancer","store","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA2B,oBAA3B;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAWC,QAAX,QAAWA,QAAX;AAAA,SAAyB,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAW;AACnEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAHiD;AAAA,GAAzB;AAAA,CAAzB;;AAKA,IAAMG,cAAc,GAAC,SAAfA,cAAe,GAAI;AACrB,MAAMC,WAAW,GAAE,CAACR,gBAAD,CAAnB;AACA,MAAMS,QAAQ,GAAG,QACfZ,OAAO,CAACD,eAAe,MAAf,SAAmBY,WAAnB,CAAD,CADQ,CACyB;AADzB,IAEfV,mBAAmB,CAACF,eAAe,MAAf,SAAmBY,WAAnB,CAAD,CAFrB,CAFqB,CAIiC;;AACtD,MAAME,KAAK,GAAGf,WAAW,CAACI,OAAD,EAASU,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACT,QAAN,CAAe;AACXU,IAAAA,IAAI,EAAC,iBADM;AAEXC,IAAAA,IAAI,EAAC;AAFM,GAAf;AAIA,SAAOF,KAAP;AACH,CAXD;;AAYA,IAAMG,OAAO,GAAGnB,aAAa,CAACa,cAAD,EAAgB;AAACO,EAAAA,KAAK;AAAN,CAAhB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from'next-redux-wrapper';\r\nimport {createStore,applyMiddleware,compose} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst loggerMiddleware = ({dispatch,getState}) => (next) => (action) =>{\r\n    console.log(action);\r\n    return next(action);\r\n}\r\n\r\nconst configureStore=()=>{\r\n    const middelwares =[loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middelwares))//배포용일때\r\n    : composeWithDevTools(applyMiddleware(...middelwares))//개발용일때\r\n    const store = createStore(reducer,enhancer);\r\n    store.dispatch({\r\n        type:'CHANGE_NICKNAME',\r\n        data:'boogicho'\r\n    })\r\n    return store;\r\n};\r\nconst wrapper = createWrapper(configureStore,{debug:process.env.NODE_ENV==='development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}