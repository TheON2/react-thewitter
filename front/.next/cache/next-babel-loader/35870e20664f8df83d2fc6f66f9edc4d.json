{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport { PropTypes } from \"prop-types\";\nimport { useSelector } from \"react-redux\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"pe51BVgysPHUiqYHVfv6g4NOmGE=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","Button","Form","Input","useInput","PropTypes","useSelector","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","position","margin","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAW;AAAA;;AAAA,MAATC,IAAS,QAATA,IAAS;AAC3B,MAAMC,EAAE,GAAGH,WAAW,CAAC,UAACI,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACC,IAAN,CAAWC,EAApB,mDAAS,eAAeH,EAAxB;AAAA,GAAD,CAAtB;;AACA,kBAA0CL,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAmBC,mBAAnB;;AACA,MAAMC,eAAe,GAAGf,WAAW,CAAC,YAAM;AACtCgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAoBI,WAApB;AACC,GAF8B,EAE7B,CAACA,WAAD,CAF6B,CAAnC;AAGA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACG,MAAAA,QAAQ,EAAE,UAAX;AAAsBC,MAAAA,MAAM,EAAC;AAA7B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEN,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAQH,CAdD;;GAAMP,W;UACSD,W,EAC+BF,Q;;;KAFxCG,W;AAgBNA,WAAW,CAACa,SAAZ,GAAwB;AACpBZ,EAAAA,IAAI,EAACH,SAAS,CAACgB,MAAV,CAAiBC;AADF,CAAxB;AAIA,eAAef,WAAf","sourcesContent":["import React ,{useCallback} from \"react\";\r\nimport {Button, Form, Input} from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst CommentForm = ({post}) =>{\r\n    const id = useSelector((state)=>state.user.me?.id);\r\n    const [commentText,onChangeCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id,commentText);\r\n        },[commentText]);\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position: 'relative',margin:0}}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post:PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}