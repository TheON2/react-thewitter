{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading,\n      id = _useSelector2.id;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n\n  var _useInView = useInView(),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  useEffect(function () {\n    if (inView && hasMorePost && !loadPostLoading) {\n      var _mainPosts;\n\n      var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POST_REQUEST,\n        lastId: lastId\n      });\n    }\n  }, [inView, mainPosts, id]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }\n  }), mainPosts.slice(0).reverse().map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }\n    });\n  }), __jsx(\"div\", {\n    ref: hasMorePost && !loadPostLoading ? ref : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Home, \"GDMcC+6d3tqaZqAzKV0Ru/jRlpw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInView];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","useInView","AppLayout","PostForm","PostCard","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePost","loadPostLoading","id","type","ref","inView","lastId","length","slice","reverse","map","undefined"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AACd,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,qBAAeC,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,sBAAwDX,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAnE;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,WAAnB,iBAAmBA,WAAnB;AAAA,MAAgCC,eAAhC,iBAAgCA,eAAhC;AAAA,MAAiDC,EAAjD,iBAAiDA,EAAjD;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAR,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,mBAAsBJ,SAAS,EAA/B;AAAA;AAAA,MAAOiB,GAAP;AAAA,MAAYC,MAAZ;;AAEArB,EAAAA,SAAS,CACP,YAAM;AACJ,QAAIqB,MAAM,IAAIL,WAAV,IAAyB,CAACC,eAA9B,EAA+C;AAAA;;AAC7C,UAAMK,MAAM,iBAAGP,SAAS,CAACA,SAAS,CAACQ,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCL,EAAhD;AACAR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEZ,iBADC;AAEPe,QAAAA,MAAM,EAANA;AAFO,OAAD,CAAR;AAID;AACF,GATM,EAUP,CAACD,MAAD,EAAUN,SAAV,EAAqBG,EAArB,CAVO,CAAT;AAaA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGE,SAAS,CAACS,KAAV,CAAgB,CAAhB,EAAmBC,OAAnB,GAA6BC,GAA7B,CAAiC,UAACZ,IAAD;AAAA,WAAU,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACI,EAApB;AAAwB,MAAA,IAAI,EAAEJ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAjC,CAFH,EAGE;AAAK,IAAA,GAAG,EAAEE,WAAW,IAAI,CAACC,eAAhB,GAAkCG,GAAlC,GAAwCO,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;GAvCQlB,I;UACUR,W,EACFC,W,EACyCA,W,EAclCC,S;;;KAjBfM,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePost, loadPostLoading, id } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  const [ref, inView] = useInView();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (inView && hasMorePost && !loadPostLoading) {\r\n        const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n        dispatch({\r\n          type: LOAD_POST_REQUEST,\r\n          lastId,\r\n        });\r\n      }\r\n    },\r\n    [inView , mainPosts, id],\r\n  );\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.slice(0).reverse().map((post) => <PostCard key={post.id} post={post} />)}\r\n      <div ref={hasMorePost && !loadPostLoading ? ref : undefined} />\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}