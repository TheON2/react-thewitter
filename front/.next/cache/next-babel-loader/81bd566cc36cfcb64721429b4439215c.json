{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport { END } from \"redux-saga\";\n\nfunction Post() {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, id, \"\\uBC88 \\uAC8C\\uC2DC\\uAE00\");\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/post/[id].js"],"names":["useRouter","React","wrapper","axios","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","END","Post","router","id","query","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,SAAQC,GAAR,QAAkB,YAAlB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,EAAN,8BADF;AAGD;;AAED,OAAO,MAAME,kBAAkB,GAAGT,OAAO,CAACS,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAV,EAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACAV,EAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AAAE;AAC3BV,IAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEhB;AADe,GAAvB;AAGAQ,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEf;AADe,GAAvB;AAGAO,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBb,GAAvB;AACA,QAAMM,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAhBiC,CAA3B;AAkBP,eAAef,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport wrapper from \"../../store/configureStore\";\r\nimport axios from \"axios\";\r\nimport {LOAD_MY_INFO_REQUEST} from \"../../reducers/user\";\r\nimport {LOAD_POST_REQUEST} from \"../../reducers/post\";\r\nimport {END} from \"redux-saga\";\r\n\r\nfunction Post() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  return (\r\n    <div>{id}번 게시글</div>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}