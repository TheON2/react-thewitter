{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport { PropTypes } from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","Button","Form","Input","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","commentText","onChangeCommentText","setCommentText","addCommentDone","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACC,IAAN,CAAWC,EAApB,mDAAS,eAAeH,EAAxB;AAAA,GAAD,CAAtB;AACA,QAAM,CAACI,WAAD,EAAaC,mBAAb,EAAiCC,cAAjC,IAAmDd,QAAQ,CAAC,EAAD,CAAjE;AACA,QAAM;AAACe,IAAAA;AAAD,MAAmBZ,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACH,IAAhB,CAApC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGmB,cAAH,EAAkB;AACdD,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACC,cAAD,CAJM,CAAT;AAOA,QAAMC,eAAe,GAAGrB,WAAW,CAAC,MAAM;AACtCY,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAACb,mBADA;AAELc,MAAAA,IAAI,EAAC;AAACC,QAAAA,OAAO,EAACP,WAAT;AAAqBQ,QAAAA,MAAM,EAACd,IAAI,CAACE,EAAjC;AAAoCa,QAAAA,MAAM,EAACb;AAA3C;AAFA,KAAD,CAAR;AAIC,GAL8B,EAK7B,CAACI,WAAD,EAAaJ,EAAb,CAL6B,CAAnC;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAE,UAAX;AAAsBC,MAAAA,MAAM,EAAC;AAA7B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEX,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACS,MAAAA,QAAQ,EAAG,UAAZ;AAAuBE,MAAAA,KAAK,EAAC,CAA7B;AAA+BC,MAAAA,MAAM,EAAC,CAAC;AAAvC,KAAf;AAA2D,IAAA,IAAI,EAAC,SAAhE;AAA0E,IAAA,QAAQ,EAAC,QAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAQH,CA5BD;;AA8BApB,WAAW,CAACqB,SAAZ,GAAwB;AACpBpB,EAAAA,IAAI,EAACL,SAAS,CAAC0B,MAAV,CAAiBC;AADF,CAAxB;AAIA,eAAevB,WAAf","sourcesContent":["import React, {useCallback, useEffect} from \"react\";\r\nimport {Button, Form, Input} from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_COMMENT_REQUEST} from \"../reducers/post\";\r\n\r\nconst CommentForm = ({post}) =>{\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state)=>state.user.me?.id);\r\n    const [commentText,onChangeCommentText,setCommentText] = useInput('');\r\n    const {addCommentDone} = useSelector((state)=>state.post);\r\n\r\n    useEffect(() => {\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone]);\r\n\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        dispatch({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data:{content:commentText,postId:post.id,userId:id},\r\n        });\r\n        },[commentText,id]);\r\n\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position: 'relative',margin:0}}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button style={{position : 'absolute',right:0,bottom:-40}} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post:PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}