{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Head } from 'next/head';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\n\nfunction Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Post, \"ssQb2IrtigSQZXNXzS9oJcp4kQg=\", false, function () {\n  return [useRouter, useSelector, useSelector];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/post/[id].js"],"names":["useRouter","React","useSelector","Head","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","user","userInfo"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,WAArB;AAIA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAQQ,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;;AACA,qBAAuBN,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AACA,sBAAqBV,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAhC;AAAA,MAAQC,QAAR,iBAAQA,QAAR;;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAiBD;;GAvBQN,I;UACQN,S,EAEQE,W,EACFA,W;;;KAJdI,I;;AA4CT,eAAeA,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector } from 'react-redux';\r\nimport { Head } from 'next/head';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_SPOST_REQUEST } from '../../reducers/post';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\nfunction Post() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n      {/*  <title>*/}\r\n      {/*    {singlePost.User.nickname}*/}\r\n      {/*    님의 글*/}\r\n      {/*  </title>*/}\r\n      {/*  <meta name=\"description\" content={singlePost.content} />*/}\r\n      {/*  <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />*/}\r\n      {/*  <meta property=\"og:description\" content={singlePost.content} />*/}\r\n      {/*  <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.png' } />*/}\r\n      {/*  <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />*/}\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_SPOST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}