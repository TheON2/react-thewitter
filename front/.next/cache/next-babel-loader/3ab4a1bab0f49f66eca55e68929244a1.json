{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔네요?'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '우와 그렇구나?'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nvar ADD_POST = 'ADD_POST';\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터 입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n}; //(이전상태,액션) => 다음상태\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAC;AACtBC,EAAAA,SAAS,EAAC,CAAC;AACPC,IAAAA,EAAE,EAAC,CADI;AAEPC,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR,KAFE;AAMPC,IAAAA,OAAO,EAAC,uBAND;AAOPC,IAAAA,MAAM,EAAC,CACH;AAACC,MAAAA,GAAG,EAAC;AAAL,KADG,EAEH;AAACA,MAAAA,GAAG,EAAC;AAAL,KAFG,EAGH;AAACA,MAAAA,GAAG,EAAC;AAAL,KAHG,CAPA;AAYPC,IAAAA,QAAQ,EAAC,CACL;AAACL,MAAAA,IAAI,EAAC;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAN;AACAC,MAAAA,OAAO,EAAC;AADR,KADK,EAGL;AAACF,MAAAA,IAAI,EAAC;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAN;AACAC,MAAAA,OAAO,EAAC;AADR,KAHK;AAZF,GAAD,CADY;AAoBtBI,EAAAA,UAAU,EAAC,EApBW;AAqBtBC,EAAAA,SAAS,EAAE;AArBW,CAAnB;AAwBP,IAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,IAAMC,OAAO,GAAC;AACjBC,EAAAA,IAAI,EAACF;AADY,CAAd;AAIP,IAAMG,SAAS,GAAE;AACbZ,EAAAA,EAAE,EAAC,CADU;AAEbG,EAAAA,OAAO,EAAC,YAFK;AAGbF,EAAAA,IAAI,EAAC;AACDD,IAAAA,EAAE,EAAC,CADF;AAEDE,IAAAA,QAAQ,EAAC;AAFR,GAHQ;AAObE,EAAAA,MAAM,EAAC,EAPM;AAQbE,EAAAA,QAAQ,EAAC;AARI,CAAjB,C,CAYA;;AACA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBhB,YAAsB;AAAA,MAATiB,MAAS;;AAC3C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKF,QAAL;AACI,6CACOK,KADP;AAEIf,QAAAA,SAAS,GAAGa,SAAH,4BAAgBE,KAAK,CAACf,SAAtB;AAFb;;AAIJ;AACI,aAAOe,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,OAAf","sourcesContent":["export const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'제로초',\r\n        },\r\n        content:'첫 번째 게시글 #해시태그 #익스프레스',\r\n        Images:[\r\n            {src:'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',},\r\n            {src:'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',},\r\n            {src:'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',}\r\n        ],\r\n        Comments:[\r\n            {User:{nickname:'nero',},\r\n            content:'우와 개정판이 나왔네요?',},\r\n            {User:{nickname:'hero',},\r\n            content:'우와 그렇구나?',}\r\n        ]\r\n    }],\r\n    imagePaths:[],\r\n    postAdded: false,\r\n}\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nexport const addPost={\r\n    type:ADD_POST\r\n}\r\n\r\nconst dummyPost ={\r\n    id:2,\r\n    content:'더미데이터 입니다.',\r\n    User:{\r\n        id:1,\r\n        nickname:'제로초',\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n}\r\n\r\n\r\n//(이전상태,액션) => 다음상태\r\nconst reducer = (state = initialState,action)=>{\r\n    switch (action.type){\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                mainPosts: [dummyPost,...state.mainPosts],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}